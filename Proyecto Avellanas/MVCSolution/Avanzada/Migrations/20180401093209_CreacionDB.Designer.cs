// <auto-generated />
using Avanzada.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Avanzada.Migrations
{
    [DbContext(typeof(AvanzadaContext))]
    [Migration("20180401093209_CreacionDB")]
    partial class CreacionDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Avanzada.Models.Asistencia_Estudiante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Asistencia");

                    b.Property<int>("CursoId");

                    b.Property<string>("CursoId1");

                    b.Property<int>("EstudianteId");

                    b.Property<DateTime>("FechaAsistencia");

                    b.Property<int>("GrupoId");

                    b.Property<int>("ProfesorId");

                    b.Property<int?>("TipoPersonaId");

                    b.HasKey("Id");

                    b.HasIndex("CursoId1");

                    b.HasIndex("GrupoId");

                    b.HasIndex("TipoPersonaId");

                    b.ToTable("Asistencia_Estudiantes");
                });

            modelBuilder.Entity("Avanzada.Models.Asistencia_Profesor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Fecha_Ingreso");

                    b.Property<DateTime>("Fecha_Salida");

                    b.Property<int>("ProfesorId");

                    b.Property<int?>("TipoPersonaId");

                    b.HasKey("Id");

                    b.HasIndex("TipoPersonaId");

                    b.ToTable("Asistencia_Profesores");
                });

            modelBuilder.Entity("Avanzada.Models.Carreras", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nombre_Carrera");

                    b.HasKey("Id");

                    b.ToTable("Carreras");
                });

            modelBuilder.Entity("Avanzada.Models.Carreras_Cursos", b =>
                {
                    b.Property<int>("CarreraId");

                    b.Property<int>("CursoId");

                    b.Property<int?>("CarrerasId");

                    b.Property<string>("CursoId1");

                    b.HasKey("CarreraId", "CursoId");

                    b.HasIndex("CarrerasId");

                    b.HasIndex("CursoId1");

                    b.ToTable("Carreras_Cursos");
                });

            modelBuilder.Entity("Avanzada.Models.Curso", b =>
                {
                    b.Property<string>("CursoId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Creditos");

                    b.Property<string>("CursoId1");

                    b.Property<int>("Estado");

                    b.Property<int?>("MatriculaId");

                    b.Property<string>("Nombre_Curso");

                    b.Property<int>("Precio");

                    b.HasKey("CursoId");

                    b.HasIndex("CursoId1");

                    b.HasIndex("MatriculaId");

                    b.ToTable("Cursos");
                });

            modelBuilder.Entity("Avanzada.Models.Grupo", b =>
                {
                    b.Property<int>("GrupoId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CursoId");

                    b.Property<string>("CursoId1");

                    b.Property<int>("Horario");

                    b.HasKey("GrupoId");

                    b.HasIndex("CursoId1");

                    b.ToTable("Grupos");
                });

            modelBuilder.Entity("Avanzada.Models.Matricula", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CarreraId");

                    b.Property<int>("CreditosMatriculados");

                    b.Property<int>("EstadoCurso");

                    b.Property<int>("IDUsuarioMatriculando");

                    b.Property<int>("IDUsuarioMatriculante");

                    b.Property<int>("Monto");

                    b.Property<int?>("PersonaId");

                    b.HasKey("Id");

                    b.HasIndex("CarreraId");

                    b.HasIndex("PersonaId");

                    b.ToTable("Matricula");
                });

            modelBuilder.Entity("Avanzada.Models.Persona", b =>
                {
                    b.Property<int>("PersonaId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Apellido");

                    b.Property<int>("Carne");

                    b.Property<int>("Cedula");

                    b.Property<string>("Contraseña");

                    b.Property<string>("Correo");

                    b.Property<DateTime>("FechaNacimiento");

                    b.Property<string>("Nombre");

                    b.Property<int>("Sexo");

                    b.Property<string>("Telefono");

                    b.Property<string>("Usuario");

                    b.HasKey("PersonaId");

                    b.ToTable("Personas");
                });

            modelBuilder.Entity("Avanzada.Models.Rubros", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CarreraId");

                    b.Property<int>("CursoId");

                    b.Property<string>("CursoId1");

                    b.Property<string>("NombreRubro");

                    b.Property<int>("Porcentaje");

                    b.HasKey("Id");

                    b.HasIndex("CarreraId");

                    b.HasIndex("CursoId1");

                    b.ToTable("Rubros");
                });

            modelBuilder.Entity("Avanzada.Models.TipoPersona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CursoId");

                    b.Property<string>("Descripcion");

                    b.Property<int?>("PersonaId1");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.HasIndex("PersonaId1");

                    b.ToTable("TipoPersona");
                });

            modelBuilder.Entity("Avanzada.Models.TipoPersona_Carreras", b =>
                {
                    b.Property<int>("CarreraId");

                    b.Property<int>("TipoPersonaId");

                    b.Property<int?>("CarrerasId");

                    b.HasKey("CarreraId", "TipoPersonaId");

                    b.HasIndex("CarrerasId");

                    b.HasIndex("TipoPersonaId");

                    b.ToTable("TipoPersona_Carreras");
                });

            modelBuilder.Entity("Avanzada.Models.Asistencia_Estudiante", b =>
                {
                    b.HasOne("Avanzada.Models.Curso", "Curso")
                        .WithMany()
                        .HasForeignKey("CursoId1");

                    b.HasOne("Avanzada.Models.Grupo", "Grupo")
                        .WithMany()
                        .HasForeignKey("GrupoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Avanzada.Models.TipoPersona", "TipoPersona")
                        .WithMany()
                        .HasForeignKey("TipoPersonaId");
                });

            modelBuilder.Entity("Avanzada.Models.Asistencia_Profesor", b =>
                {
                    b.HasOne("Avanzada.Models.TipoPersona", "TipoPersona")
                        .WithMany()
                        .HasForeignKey("TipoPersonaId");
                });

            modelBuilder.Entity("Avanzada.Models.Carreras_Cursos", b =>
                {
                    b.HasOne("Avanzada.Models.Carreras", "Carreras")
                        .WithMany("Cursos")
                        .HasForeignKey("CarrerasId");

                    b.HasOne("Avanzada.Models.Curso", "Curso")
                        .WithMany("Carreras")
                        .HasForeignKey("CursoId1");
                });

            modelBuilder.Entity("Avanzada.Models.Curso", b =>
                {
                    b.HasOne("Avanzada.Models.Curso")
                        .WithMany("Curso_Rquerido")
                        .HasForeignKey("CursoId1");

                    b.HasOne("Avanzada.Models.Matricula")
                        .WithMany("Cursos")
                        .HasForeignKey("MatriculaId");
                });

            modelBuilder.Entity("Avanzada.Models.Grupo", b =>
                {
                    b.HasOne("Avanzada.Models.Curso", "Curso")
                        .WithMany("Grupos")
                        .HasForeignKey("CursoId1");
                });

            modelBuilder.Entity("Avanzada.Models.Matricula", b =>
                {
                    b.HasOne("Avanzada.Models.Carreras", "Carrera")
                        .WithMany()
                        .HasForeignKey("CarreraId");

                    b.HasOne("Avanzada.Models.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaId");
                });

            modelBuilder.Entity("Avanzada.Models.Rubros", b =>
                {
                    b.HasOne("Avanzada.Models.Carreras", "Carrera")
                        .WithMany()
                        .HasForeignKey("CarreraId");

                    b.HasOne("Avanzada.Models.Curso", "Curso")
                        .WithMany()
                        .HasForeignKey("CursoId1");
                });

            modelBuilder.Entity("Avanzada.Models.TipoPersona", b =>
                {
                    b.HasOne("Avanzada.Models.Curso")
                        .WithMany("Personas")
                        .HasForeignKey("CursoId");

                    b.HasOne("Avanzada.Models.Persona", "PersonaId")
                        .WithMany("Tipo")
                        .HasForeignKey("PersonaId1");
                });

            modelBuilder.Entity("Avanzada.Models.TipoPersona_Carreras", b =>
                {
                    b.HasOne("Avanzada.Models.Carreras", "Carreras")
                        .WithMany("Personas")
                        .HasForeignKey("CarrerasId");

                    b.HasOne("Avanzada.Models.TipoPersona", "TipoPersona")
                        .WithMany("Carreras")
                        .HasForeignKey("TipoPersonaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
